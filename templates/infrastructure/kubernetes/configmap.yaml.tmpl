apiVersion: v1
kind: ConfigMap
metadata:
  name: {{.Name}}-config
  namespace: {{.Name}}
  labels:
    app.kubernetes.io/name: {{.Name}}
    app.kubernetes.io/instance: {{.Name}}
    app.kubernetes.io/component: config
    app.kubernetes.io/part-of: {{.Name}}
data:
  # Database Configuration
  DB_HOST: "postgres-service"
  DB_PORT: "5432"
  DB_NAME: "{{.Name}}_production"
  
  # Redis Configuration
  REDIS_HOST: "redis-service"
  REDIS_PORT: "6379"
  
  # Application Configuration
  NODE_ENV: "production"
  GO_ENV: "production"
  
  # API Configuration
  {{if .Components.Backend.GoGin}}
  API_URL: "http://{{.Name}}-api-service:8080"
  {{end}}
  
  # Monitoring Configuration
  PROMETHEUS_ENABLED: "true"
  METRICS_PORT: "9090"
  
  # Logging Configuration
  LOG_LEVEL: "info"
  LOG_FORMAT: "json"

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{.Name}}-nginx-config
  namespace: {{.Name}}
  labels:
    app.kubernetes.io/name: {{.Name}}
    app.kubernetes.io/instance: {{.Name}}
    app.kubernetes.io/component: nginx-config
    app.kubernetes.io/part-of: {{.Name}}
data:
  nginx.conf: |
    user nginx;
    worker_processes auto;
    error_log /var/log/nginx/error.log warn;
    pid /var/run/nginx.pid;

    events {
        worker_connections 1024;
        use epoll;
        multi_accept on;
    }

    http {
        include /etc/nginx/mime.types;
        default_type application/octet-stream;

        # Logging
        log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                        '$status $body_bytes_sent "$http_referer" '
                        '"$http_user_agent" "$http_x_forwarded_for"';
        access_log /var/log/nginx/access.log main;

        # Performance
        sendfile on;
        tcp_nopush on;
        tcp_nodelay on;
        keepalive_timeout 65;
        types_hash_max_size 2048;

        # Security headers
        add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

        # Gzip compression
        gzip on;
        gzip_vary on;
        gzip_min_length 1024;
        gzip_types text/plain text/css text/xml text/javascript application/javascript application/xml+rss application/json;

        # Rate limiting
        limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
        limit_req_zone $binary_remote_addr zone=login:10m rate=1r/s;

        # Upstream servers
        {{if .Components.Backend.GoGin}}
        upstream api_backend {
            least_conn;
            server {{.Name}}-api-service:8080 max_fails=3 fail_timeout=30s;
        }
        {{end}}

        {{if .Components.Frontend.NextJS.App}}
        upstream app_frontend {
            least_conn;
            server {{.Name}}-app-service:3000 max_fails=3 fail_timeout=30s;
        }
        {{end}}

        {{if .Components.Frontend.NextJS.Home}}
        upstream home_frontend {
            least_conn;
            server {{.Name}}-home-service:3000 max_fails=3 fail_timeout=30s;
        }
        {{end}}

        {{if .Components.Frontend.NextJS.Admin}}
        upstream admin_frontend {
            least_conn;
            server {{.Name}}-admin-service:3000 max_fails=3 fail_timeout=30s;
        }
        {{end}}

        # Default server
        server {
            listen 80 default_server;
            server_name _;
            return 444;
        }

        # Main application
        {{if .Components.Frontend.NextJS.App}}
        server {
            listen 80;
            server_name {{.Name}}.{{.Organization}}.com;

            location / {
                proxy_pass http://app_frontend;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_connect_timeout 30s;
                proxy_send_timeout 30s;
                proxy_read_timeout 30s;
            }

            {{if .Components.Backend.GoGin}}
            location /api/ {
                limit_req zone=api burst=20 nodelay;
                proxy_pass http://api_backend;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_connect_timeout 30s;
                proxy_send_timeout 30s;
                proxy_read_timeout 30s;
            }
            {{end}}

            # Health check
            location /health {
                access_log off;
                return 200 "healthy\n";
                add_header Content-Type text/plain;
            }
        }
        {{end}}

        {{if .Components.Frontend.NextJS.Home}}
        # Home/Landing page
        server {
            listen 80;
            server_name home.{{.Name}}.{{.Organization}}.com;

            location / {
                proxy_pass http://home_frontend;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
            }
        }
        {{end}}

        {{if .Components.Frontend.NextJS.Admin}}
        # Admin dashboard
        server {
            listen 80;
            server_name admin.{{.Name}}.{{.Organization}}.com;

            location / {
                proxy_pass http://admin_frontend;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
            }

            {{if .Components.Backend.GoGin}}
            location /api/ {
                limit_req zone=api burst=10 nodelay;
                proxy_pass http://api_backend;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
            }
            {{end}}
        }
        {{end}}
    }