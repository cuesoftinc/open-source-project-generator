apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{.Name}}-ingress
  namespace: {{.Name}}
  labels:
    app.kubernetes.io/name: {{.Name}}
    app.kubernetes.io/instance: {{.Name}}
    app.kubernetes.io/component: ingress
    app.kubernetes.io/part-of: {{.Name}}
  annotations:
    # Ingress controller specific annotations
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    
    # Security annotations
    nginx.ingress.kubernetes.io/server-snippet: |
      add_header X-Frame-Options DENY;
      add_header X-Content-Type-Options nosniff;
      add_header X-XSS-Protection "1; mode=block";
      add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    
    # Rate limiting
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    
    # CORS
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "https://{{.Name}}.{{.Organization}}.com"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization"
    
    # SSL/TLS
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/ssl-protocols: "TLSv1.2 TLSv1.3"
    nginx.ingress.kubernetes.io/ssl-ciphers: "ECDHE-RSA-AES128-GCM-SHA256,ECDHE-RSA-AES256-GCM-SHA384,ECDHE-RSA-AES128-SHA256,ECDHE-RSA-AES256-SHA384"
    
    # Compression
    nginx.ingress.kubernetes.io/enable-brotli: "true"
    
    # Monitoring
    nginx.ingress.kubernetes.io/enable-access-log: "true"
    nginx.ingress.kubernetes.io/enable-rewrite-log: "true"
spec:
  tls:
  - hosts:
    - {{.Name}}.{{.Organization}}.com
    {{if .Components.Frontend.NextJS.Home}}- home.{{.Name}}.{{.Organization}}.com{{end}}
    {{if .Components.Frontend.NextJS.Admin}}- admin.{{.Name}}.{{.Organization}}.com{{end}}
    secretName: {{.Name}}-tls
  rules:
  {{if .Components.Frontend.NextJS.App}}
  - host: {{.Name}}.{{.Organization}}.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: {{.Name}}-app-service
            port:
              number: 3000
      {{if .Components.Backend.GoGin}}
      - path: /api
        pathType: Prefix
        backend:
          service:
            name: {{.Name}}-api-service
            port:
              number: 8080
      {{end}}
  {{end}}
  
  {{if .Components.Frontend.NextJS.Home}}
  - host: home.{{.Name}}.{{.Organization}}.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: {{.Name}}-home-service
            port:
              number: 3000
  {{end}}
  
  {{if .Components.Frontend.NextJS.Admin}}
  - host: admin.{{.Name}}.{{.Organization}}.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: {{.Name}}-admin-service
            port:
              number: 3000
      {{if .Components.Backend.GoGin}}
      - path: /api
        pathType: Prefix
        backend:
          service:
            name: {{.Name}}-api-service
            port:
              number: 8080
      {{end}}
  {{end}}

---
# Internal ingress for monitoring and admin tools
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{.Name}}-internal-ingress
  namespace: {{.Name}}
  labels:
    app.kubernetes.io/name: {{.Name}}
    app.kubernetes.io/instance: {{.Name}}
    app.kubernetes.io/component: internal-ingress
    app.kubernetes.io/part-of: {{.Name}}
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    
    # Authentication for internal services
    nginx.ingress.kubernetes.io/auth-type: basic
    nginx.ingress.kubernetes.io/auth-secret: {{.Name}}-basic-auth
    nginx.ingress.kubernetes.io/auth-realm: "{{.Name}} Internal Services"
    
    # Whitelist internal IPs
    nginx.ingress.kubernetes.io/whitelist-source-range: "10.0.0.0/8,172.16.0.0/12,192.168.0.0/16"
    
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  tls:
  - hosts:
    - internal.{{.Name}}.{{.Organization}}.com
    secretName: {{.Name}}-internal-tls
  rules:
  - host: internal.{{.Name}}.{{.Organization}}.com
    http:
      paths:
      - path: /grafana
        pathType: Prefix
        backend:
          service:
            name: grafana-service
            port:
              number: 3000
      - path: /prometheus
        pathType: Prefix
        backend:
          service:
            name: prometheus-service
            port:
              number: 9090