# Advanced Configuration Options
# Demonstrates all available configuration options and advanced features
#
# This configuration showcases:
# - All component types
# - Advanced integration options
# - Custom environment variables
# - All generation options
# - Detailed component configurations
#
# Usage:
#   project-generator generate --config configs/advanced-options.yaml

# Project metadata
name: advanced-project
description: |
  Advanced project demonstrating all available configuration options.
  This includes web, mobile, backend, and comprehensive integration.
output_dir: ./advanced-project
# Component definitions with all available options
components:
  # Next.js Frontend - All options specified
  - type: nextjs
    name: web-app
    enabled: true
    config:
      name: web-app
      # TypeScript configuration
      typescript: true
      # Styling framework
      tailwind: true
      # Next.js routing
      app_router: true
      # Code quality tools
      eslint: true

  # Go Backend - All options specified
  - type: go-backend
    name: api-server
    enabled: true
    config:
      name: api-server
      # Go module path (use your actual repository)
      module: github.com/example/advanced-project
      # Web framework
      framework: gin
      # Server port
      port: 8080

  # Android Mobile App - All options specified
  - type: android
    name: mobile-android
    enabled: true
    config:
      name: mobile-android
      # Android package name (reverse domain notation)
      package: com.example.advancedproject
      # Minimum Android version (Android 7.0)
      min_sdk: 24
      # Target Android version (Android 15)
      target_sdk: 35
      # Programming language
      language: kotlin

  # iOS Mobile App - All options specified
  - type: ios
    name: mobile-ios
    enabled: true
    config:
      name: mobile-ios
      # iOS bundle identifier (reverse domain notation)
      bundle_id: com.example.advancedproject
      # Minimum iOS version
      deployment_target: "15.0"
      # Programming language
      language: swift

# Advanced integration configuration
integration:
  # Generate Docker Compose for local development
  generate_docker_compose: true

  # Generate build and run scripts
  generate_scripts: true

  # API endpoint configuration
  # These endpoints are used to configure how components connect
  api_endpoints:
    # Backend API endpoint
    backend: http://localhost:8080
    # Frontend web app endpoint
    frontend: http://localhost:3000

  # Shared environment variables
  # These are generated in .env files for each component
  shared_environment:
    # Application environment
    NODE_ENV: development
    ENV: development

    # Logging configuration
    LOG_LEVEL: info
    LOG_FORMAT: json
    LOG_OUTPUT: stdout

    # API configuration
    API_TIMEOUT: "30"
    API_RETRY_ATTEMPTS: "3"
    API_RETRY_DELAY: "1000"

    # Frontend-specific (NEXT_PUBLIC_ prefix for client-side access)
    NEXT_PUBLIC_API_URL: http://localhost:8080
    NEXT_PUBLIC_WS_URL: http://localhost:8080/ws
    NEXT_PUBLIC_APP_NAME: "Advanced Project"
    NEXT_PUBLIC_APP_VERSION: "2.0.0"

    # Backend-specific
    PORT: "8080"
    HOST: "0.0.0.0"

    # CORS configuration
    CORS_ORIGINS: "http://localhost:3000"
    CORS_METHODS: "GET,POST,PUT,DELETE,PATCH,OPTIONS"
    CORS_HEADERS: "Content-Type,Authorization,X-Requested-With"
    CORS_CREDENTIALS: "true"

    # Database configuration (examples)
    DB_HOST: localhost
    DB_PORT: "5432"
    DB_NAME: advanced_project
    DB_USER: postgres
    DB_PASSWORD: postgres
    DB_SSL_MODE: disable
    DB_MAX_CONNECTIONS: "25"
    DB_MAX_IDLE_CONNECTIONS: "5"
    DB_CONNECTION_LIFETIME: "5m"

    # Redis/Cache configuration (examples)
    REDIS_HOST: localhost
    REDIS_PORT: "6379"
    REDIS_DB: "0"
    REDIS_PASSWORD: ""
    CACHE_TTL: "3600"

    # Security configuration
    JWT_SECRET: change-this-in-production-use-strong-secret
    JWT_EXPIRY: "24h"
    JWT_REFRESH_EXPIRY: "168h"
    SESSION_SECRET: change-this-in-production
    BCRYPT_COST: "10"

    # Rate limiting
    RATE_LIMIT_ENABLED: "true"
    RATE_LIMIT_REQUESTS: "100"
    RATE_LIMIT_WINDOW: "1m"

    # Feature flags
    FEATURE_ANALYTICS: "true"
    FEATURE_CRASH_REPORTING: "true"
    FEATURE_PUSH_NOTIFICATIONS: "true"
    FEATURE_DARK_MODE: "true"
    FEATURE_OFFLINE_MODE: "true"

    # Third-party services (examples - use your actual keys)
    STRIPE_PUBLIC_KEY: pk_test_example
    STRIPE_SECRET_KEY: sk_test_example
    SENDGRID_API_KEY: SG.example
    AWS_REGION: us-east-1
    AWS_ACCESS_KEY_ID: AKIAIOSFODNN7EXAMPLE
    AWS_SECRET_ACCESS_KEY: wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY

    # Monitoring and observability
    SENTRY_DSN: https://example@sentry.io/123456
    DATADOG_API_KEY: example_api_key
    NEW_RELIC_LICENSE_KEY: example_license_key

    # Mobile-specific
    MOBILE_API_URL: http://10.0.2.2:8080
    MOBILE_TIMEOUT: "30"
    MOBILE_CACHE_SIZE: "50"

# All generation options with explanations
options:
  # Use external CLI tools when available
  # true: Use npx, go, gradle, xcodebuild (recommended)
  # false: Always use fallback template generation
  use_external_tools: true

  # Preview mode - show what would be generated without creating files
  # true: Preview only, no files created
  # false: Actually generate files
  dry_run: false

  # Verbose output - show detailed information during generation
  # true: Show detailed logs, command output, file operations
  # false: Show only essential information
  verbose: true

  # Create backup before overwriting existing directories
  # true: Create .backup directory with existing files
  # false: No backup (not recommended)
  create_backup: true

  # Force overwrite without prompting
  # true: Overwrite existing files without confirmation
  # false: Prompt before overwriting (recommended)
  force_overwrite: false
# Notes:
# 1. Replace example API keys and secrets with your actual values
# 2. Use environment-specific configuration files for production
# 3. Never commit sensitive credentials to version control
# 4. Use .env.example files to document required variables
# 5. Consider using secret management tools for production
