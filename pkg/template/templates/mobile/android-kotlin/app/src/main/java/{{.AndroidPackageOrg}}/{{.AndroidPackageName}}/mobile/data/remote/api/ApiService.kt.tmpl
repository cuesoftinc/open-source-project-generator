package {{.Organization}}.{{.Name | lower}}.mobile.data.remote.api

import retrofit2.Response
import retrofit2.http.*
import {{.Organization}}.{{.Name | lower}}.mobile.data.remote.dto.UserDto
import {{.Organization}}.{{.Name | lower}}.mobile.data.remote.dto.LoginRequest
import {{.Organization}}.{{.Name | lower}}.mobile.data.remote.dto.LoginResponse
import {{.Organization}}.{{.Name | lower}}.mobile.data.remote.dto.ApiResponse

interface ApiService {
    
    @POST("auth/login")
    suspend fun login(@Body request: LoginRequest): Response<ApiResponse<LoginResponse>>
    
    @GET("users/profile")
    suspend fun getUserProfile(): Response<ApiResponse<UserDto>>
    
    @GET("users")
    suspend fun getUsers(
        @Query("page") page: Int = 1,
        @Query("limit") limit: Int = 20
    ): Response<ApiResponse<List<UserDto>>>
    
    @GET("users/{id}")
    suspend fun getUserById(@Path("id") id: String): Response<ApiResponse<UserDto>>
    
    @PUT("users/{id}")
    suspend fun updateUser(
        @Path("id") id: String,
        @Body user: UserDto
    ): Response<ApiResponse<UserDto>>
    
    @DELETE("users/{id}")
    suspend fun deleteUser(@Path("id") id: String): Response<ApiResponse<Unit>>
}