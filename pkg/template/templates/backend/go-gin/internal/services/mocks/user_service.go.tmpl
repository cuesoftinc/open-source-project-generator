package mocks

import (
	"{{.Name}}/internal/models"
	"github.com/stretchr/testify/mock"
)

type UserService struct {
	mock.Mock
}

func (m *UserService) Create(user *models.User) error {
	args := m.Called(user)
	return args.Error(0)
}

func (m *UserService) GetByID(id uint) (*models.User, error) {
	args := m.Called(id)
	if args.Get(0) == nil {
		return nil, args.Error(1)
	}
	return args.Get(0).(*models.User), args.Error(1)
}

func (m *UserService) GetByEmail(email string) (*models.User, error) {
	args := m.Called(email)
	if args.Get(0) == nil {
		return nil, args.Error(1)
	}
	return args.Get(0).(*models.User), args.Error(1)
}

func (m *UserService) Update(user *models.User) error {
	args := m.Called(user)
	return args.Error(0)
}

func (m *UserService) Delete(id uint) error {
	args := m.Called(id)
	return args.Error(0)
}

func (m *UserService) GetAll(page, limit int) ([]*models.User, int64, error) {
	args := m.Called(page, limit)
	if args.Get(0) == nil {
		return nil, args.Get(1).(int64), args.Error(2)
	}
	return args.Get(0).([]*models.User), args.Get(1).(int64), args.Error(2)
}

func (m *UserService) ChangePassword(userID uint, oldPassword, newPassword string) error {
	args := m.Called(userID, oldPassword, newPassword)
	return args.Error(0)
}

func (m *UserService) ResetPassword(email string) error {
	args := m.Called(email)
	return args.Error(0)
}