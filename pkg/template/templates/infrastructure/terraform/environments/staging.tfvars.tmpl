# {{.Name}} - Staging Environment Configuration

# Environment configuration
environment = "staging"

# Network configuration
vpc_cidr = "10.1.0.0/16"
availability_zones = ["us-west-2a", "us-west-2b", "us-west-2c"]

# Kubernetes configuration
kubernetes_version = "1.28"
node_instance_type = "t3.medium"
min_node_count = 2
max_node_count = 6
desired_node_count = 3

# Database configuration
db_instance_class = "db.t3.small"
db_allocated_storage = 50
db_max_allocated_storage = 100
db_backup_retention_period = 7
db_multi_az = true

# Redis configuration
redis_node_type = "cache.t3.small"
redis_num_cache_nodes = 2

# SSL/TLS configuration
enable_ssl = true
ssl_certificate_arn = ""  # Will be created automatically

# Domain configuration
domain_name = "staging.{{.Name}}.{{.Organization}}.com"
create_route53_zone = true

# Monitoring and logging
enable_monitoring = true
enable_logging = true
log_retention_days = 14

# Backup configuration
enable_backups = true
backup_schedule = "0 2 * * *"
backup_retention_days = 14

# Security configuration
enable_waf = true
allowed_cidr_blocks = ["0.0.0.0/0"]
enable_vpc_flow_logs = true

# Cost optimization
enable_spot_instances = false
spot_instance_types = ["t3.medium", "t3.large"]

# Auto-scaling configuration
enable_cluster_autoscaler = true
enable_horizontal_pod_autoscaler = true
enable_vertical_pod_autoscaler = true

# Disaster recovery
enable_cross_region_backup = true
backup_region = "us-east-1"

# Development configuration
enable_bastion_host = false
bastion_instance_type = "t3.nano"

# Feature flags
enable_service_mesh = false
enable_chaos_engineering = true
enable_canary_deployments = true

# Additional tags
additional_tags = {
  Environment = "staging"
  Purpose     = "pre-production-testing"
  Compliance  = "required"
}