{{if .Components.Frontend.NextJS.App}}
apiVersion: v1
kind: Service
metadata:
  name: {{.Name}}-app-service
  namespace: {{.Name}}
  labels:
    app.kubernetes.io/name: {{.Name}}-app
    app.kubernetes.io/instance: {{.Name}}
    app.kubernetes.io/component: frontend
    app.kubernetes.io/part-of: {{.Name}}
spec:
  type: ClusterIP
  ports:
  - port: 3000
    targetPort: http
    protocol: TCP
    name: http
  selector:
    app.kubernetes.io/name: {{.Name}}-app
    app.kubernetes.io/instance: {{.Name}}

---
{{end}}

{{if .Components.Frontend.NextJS.Home}}
apiVersion: v1
kind: Service
metadata:
  name: {{.Name}}-home-service
  namespace: {{.Name}}
  labels:
    app.kubernetes.io/name: {{.Name}}-home
    app.kubernetes.io/instance: {{.Name}}
    app.kubernetes.io/component: frontend
    app.kubernetes.io/part-of: {{.Name}}
spec:
  type: ClusterIP
  ports:
  - port: 3000
    targetPort: http
    protocol: TCP
    name: http
  selector:
    app.kubernetes.io/name: {{.Name}}-home
    app.kubernetes.io/instance: {{.Name}}

---
{{end}}

{{if .Components.Frontend.NextJS.Admin}}
apiVersion: v1
kind: Service
metadata:
  name: {{.Name}}-admin-service
  namespace: {{.Name}}
  labels:
    app.kubernetes.io/name: {{.Name}}-admin
    app.kubernetes.io/instance: {{.Name}}
    app.kubernetes.io/component: frontend
    app.kubernetes.io/part-of: {{.Name}}
spec:
  type: ClusterIP
  ports:
  - port: 3000
    targetPort: http
    protocol: TCP
    name: http
  selector:
    app.kubernetes.io/name: {{.Name}}-admin
    app.kubernetes.io/instance: {{.Name}}

---
{{end}}

{{if .Components.Backend.GoGin}}
apiVersion: v1
kind: Service
metadata:
  name: {{.Name}}-api-service
  namespace: {{.Name}}
  labels:
    app.kubernetes.io/name: {{.Name}}-api
    app.kubernetes.io/instance: {{.Name}}
    app.kubernetes.io/component: backend
    app.kubernetes.io/part-of: {{.Name}}
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9090"
    prometheus.io/path: "/metrics"
spec:
  type: ClusterIP
  ports:
  - port: 8080
    targetPort: http
    protocol: TCP
    name: http
  - port: 9090
    targetPort: metrics
    protocol: TCP
    name: metrics
  selector:
    app.kubernetes.io/name: {{.Name}}-api
    app.kubernetes.io/instance: {{.Name}}

---
{{end}}

# Database Services
apiVersion: v1
kind: Service
metadata:
  name: {{.Name}}-postgres-service
  namespace: {{.Name}}
  labels:
    app.kubernetes.io/name: {{.Name}}-postgres
    app.kubernetes.io/instance: {{.Name}}
    app.kubernetes.io/component: database
    app.kubernetes.io/part-of: {{.Name}}
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9187"
    prometheus.io/path: "/metrics"
spec:
  type: ClusterIP
  ports:
  - port: 5432
    targetPort: postgres
    protocol: TCP
    name: postgres
  - port: 9187
    targetPort: metrics
    protocol: TCP
    name: metrics
  selector:
    app.kubernetes.io/name: {{.Name}}-postgres
    app.kubernetes.io/instance: {{.Name}}

---
apiVersion: v1
kind: Service
metadata:
  name: {{.Name}}-postgres-headless
  namespace: {{.Name}}
  labels:
    app.kubernetes.io/name: {{.Name}}-postgres
    app.kubernetes.io/instance: {{.Name}}
    app.kubernetes.io/component: database
    app.kubernetes.io/part-of: {{.Name}}
spec:
  type: ClusterIP
  clusterIP: None
  ports:
  - port: 5432
    targetPort: postgres
    protocol: TCP
    name: postgres
  selector:
    app.kubernetes.io/name: {{.Name}}-postgres
    app.kubernetes.io/instance: {{.Name}}

---
apiVersion: v1
kind: Service
metadata:
  name: {{.Name}}-redis-service
  namespace: {{.Name}}
  labels:
    app.kubernetes.io/name: {{.Name}}-redis
    app.kubernetes.io/instance: {{.Name}}
    app.kubernetes.io/component: cache
    app.kubernetes.io/part-of: {{.Name}}
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9121"
    prometheus.io/path: "/metrics"
spec:
  type: ClusterIP
  ports:
  - port: 6379
    targetPort: redis
    protocol: TCP
    name: redis
  - port: 9121
    targetPort: metrics
    protocol: TCP
    name: metrics
  selector:
    app.kubernetes.io/name: {{.Name}}-redis
    app.kubernetes.io/instance: {{.Name}}

---
# Load Balancer Service
apiVersion: v1
kind: Service
metadata:
  name: {{.Name}}-nginx-service
  namespace: {{.Name}}
  labels:
    app.kubernetes.io/name: {{.Name}}-nginx
    app.kubernetes.io/instance: {{.Name}}
    app.kubernetes.io/component: loadbalancer
    app.kubernetes.io/part-of: {{.Name}}
spec:
  type: LoadBalancer
  ports:
  - port: 80
    targetPort: http
    protocol: TCP
    name: http
  - port: 443
    targetPort: https
    protocol: TCP
    name: https
  selector:
    app.kubernetes.io/name: {{.Name}}-nginx
    app.kubernetes.io/instance: {{.Name}}